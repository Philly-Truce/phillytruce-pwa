datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator json {
  provider = "prisma-json-types-generator"
  // namespace = "PrismaJson"
  // clientOutput = "<finds it automatically>"
  // (./ -> relative to schema, or an importable path to require() it)
}

enum ReportStage {
  data_gathering
  unclaimed
  claimed
  archived
}

enum ReportOrigin {
  user_created
  witness_text
}

model Witness {
  id                   String   @id @default(auto()) @map("_id") @db.ObjectId
  phone_number         String
  initial_contact_date DateTime
  last_contact_date    DateTime
  reports              Report[] @relation("WitnessReports")
  @@map("witnesses")
}

model User {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  phone_number      Int
  first_name        String
  last_name         String
  last_logged_in_at DateTime
  created_at        DateTime
  is_messaging_onboarding_complete Boolean
  // TODO: Profile picture field
  reports          Report[] @relation("UserReports")
  @@map("users")
}

model Report {
  id                     String   @id @default(auto()) @map("_id") @db.ObjectId
  incident_report_number Int   @unique
  report_origin          ReportOrigin
  report_initiated_at    DateTime
  report_stage           ReportStage
  incident_type          String[]
  description            String
  location               String
  report_last_updated_at DateTime
  ppd_notified           Boolean

  // Fields for user-created reports
  creator_user_id        String?  @db.ObjectId
  creator_user           User?    @relation("UserReports", fields: [creator_user_id], references: [id])

  // Fields for witness-texted reports
  witness_id             String?  @db.ObjectId
  witness                Witness? @relation("WitnessReports", fields: [witness_id], references: [id])
  session_id             String?
  chat_service_id        String?
  last_message_at        DateTime?
  unclaimed_at           DateTime?
  claimed_at             DateTime?

  /// [Messages]
  messages               Json?    // This will store the array of message objects

  // Common field for final stage
  archived_at            DateTime?
  @@map("reports")
}